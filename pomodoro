#!/bin/bash
POMODORO=25
BREAK=5

UNIT=60 # =minutes

CONFIG_ROOT=$HOME
if [ -n "$XDG_CONFIG_HOME" ]
then
    CONFIG_ROOT=$XDG_CONFIG_HOME
fi

CONFIG_DIR="$CONFIG_ROOT/.pomodoro"
HOOKS_DIR="$CONFIG_DIR/hooks"
RES_DIR="$CONFIG_DIR/resources"

PID_FILE="$CONFIG_DIR/pid"

HOOKS_WORK="$HOOKS_DIR/work"
HOOKS_PAUSE="$HOOKS_DIR/break"
HOOKS_COUNT="$HOOKS_DIR/count"
HOOKS_EXIT="$HOOKS_DIR/exit"

VERBOSE=false

function log() {
  if [ "$VERBOSE" = true ]
  then
    echo "$@"
  fi
}

function check_running() {
    if [ -f "$PID_FILE" ]
    then
        echo "Another instance of $0 is already running. ($(cat "$PID_FILE"))"
        exit 1
    fi
}

function init_dir() {
    log "INIT: Creating directory '$1'..."
    mkdir -p "$1" || (echo "Failed to create directory '$1.'"; exit 1;)
}

if [ ! -d "$HOOKS_DIR" ];
then
    init_dir "$HOOKS_DIR"
fi

function execute_hooks() {
    local hook_dir
    hook_dir=$1
    shift
    if [ ! -d "$hook_dir" ]; then
        init_dir "$hook_dir"
    fi
    find "$hook_dir" -maxdepth 1 -mindepth 1 -not -type d | while read script
    do
        log "HOOK: $script" "$@"
        export HOOKS_DIR
        export RES_DIR
        export CONFIG_DIR
        $script "$@"
    done
}

function print_help() {
    echo "USAGE: $0 [OPTION]"
    echo ""
    echo "Options:"
    echo "  -v  verbose mode"
    echo "  -s  stop currently running timer"
    echo "  -r  restart currently running timer"
    echo "  -h  Show this help"
}

function get_pid() {
    if [ ! -f "$PID_FILE" ]
    then
        echo "No instance of $0 is currently running"
        exit 1
    fi
    cat "$PID_FILE"
}

# Parse options
while getopts ":hvsr" opt
do
    case $opt in
        h)
            print_help
            exit 0
            ;;
        v)
            VERBOSE=true
            ;;
        s)
            running_pid=$(get_pid)
            kill "$running_pid"
            exit 0;
            ;;
        r)
            running_pid=$(get_pid)
            kill "$running_pid";
            rm "$PID_FILE"
            ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            print_help
            exit 1
            ;;
    esac
done

function run() {
    echo $$ > "$PID_FILE"
    # Do the pomodoro
    N_POMODORO=0
    while N_POMODORO=$((N_POMODORO+1))
    do
        log "Work!"
        execute_hooks "$HOOKS_WORK"
        i=0
        while [ $i -lt $POMODORO ]
        do
            sleep $UNIT
            i=$((1+i))
            execute_hooks "$HOOKS_COUNT" "Pomodoro" $i $POMODORO
        done

        log "Break!";
        execute_hooks "$HOOKS_PAUSE"
        i=0
        while [ $i -lt $BREAK ]
        do
            sleep $UNIT
            i=$((i+1))
            execute_hooks "$HOOKS_COUNT" "Break" $i $BREAK
        done
    done
}

check_running

function on_exit() {
    log "Executing cleanup scripts..."
    execute_hooks "$HOOKS_EXIT"
    rm "$PID_FILE"
}
trap on_exit EXIT

run

